@model DCAS_PracticalExam.Helper_Model.VerifyOTP

@{
    ViewData["Title"] = "Verify OTP";
}


<style>
    .btn-primary {
        background: linear-gradient(90deg, #7BD3EA, #6AD4DD, #97E7E1);
        border: none;
        border-radius: 6px;
        width: 31%;
        padding: 15px 0;
        font-size: 12px;
        color: #fff;
        font-weight: bold;
        transition: all 0.3s ease;
        cursor: pointer;
        text-transform: uppercase;
    }

        .btn-primary:hover {
            background: linear-gradient(90deg, #6AD4DD, #7BD3EA, #97E7E1);
            box-shadow: 0px 4px 15px rgba(0, 123, 255, 0.3);
        }

    .card-header {
        background: linear-gradient(90deg, #7BD3EA, #6AD4DD, #97E7E1);
        font-weight: bold;
    }
    .navbar{
        display:none;
    }
    .vh-100 {
    height: 100vh;
    }

    .form-control {
        text-align: center;
        font-weight: bold;
    }

</style>

<div class="container d-flex align-items-center justify-content-center vh-100">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header text-center">
                    <h2 style="color: #fff">Verify OTP</h2>
                </div>
                <div class="card-body">
                    <div class="alert alert-secondary text-center">
                        <p class="mb-1">You will receive OTP on you</p>
                        <ul class="list-unstyled mb-2">
                            <li><strong>Mobile Number :</strong> @Model.MobileNumber</li>
                            <li><strong>Email ID :</strong> @Model.Email</li>
                        </ul>
                        <p>Please enter either one of the OTP below to complete the verification</p>
                    </div>

                    <form asp-action="VerifyOtp" method="post" id="otpForm">
                        <div class="form-group text-center">
                            <label for="otp" class="control-label">Enter OTP</label>
                            <div id="otp" class="d-flex justify-content-center mt-3" style="direction:ltr">
                                <input type="number" class="form-control otp-input mx-1" maxlength="1" min="0" oninput="this.value = this.value.slice(0, 1)" onpaste="return false;" />
                                <input type="number" class="form-control otp-input mx-1" maxlength="1" min="0" oninput="this.value = this.value.slice(0, 1)" onpaste="return false;" />
                                <input type="number" class="form-control otp-input mx-1" maxlength="1" min="0" oninput="this.value = this.value.slice(0, 1)" onpaste="return false;"/>
                                <input type="number" class="form-control otp-input mx-1" maxlength="1" min="0" oninput="this.value = this.value.slice(0, 1)" onpaste="return false;"/>
                                <input type="number" class="form-control otp-input mx-1" maxlength="1" min="0" oninput="this.value = this.value.slice(0, 1)" onpaste="return false;"/>
                                <input type="number" class="form-control otp-input mx-1" maxlength="1" min="0" oninput="this.value = this.value.slice(0, 1)" onpaste="return false;"/>
                            </div>
                            <span asp-validation-for="Otp" class="text-danger"></span>
                        </div>
                        <div class="form-group text-center mt-4">
                            <input type="hidden" id="Otp" name="Otp" />
                            <input type="hidden" id="employeeId" name="employeeId" value="@Model.employeeId" />
                            <button type="submit" class="btn btn-primary btn-md">Verify OTP</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <partial name="_msgs" />
    <script>
        $(document).ready(function () {
            const otpInputs = document.querySelectorAll('.otp-input');

            otpInputs.forEach((input, index) => {
                input.addEventListener('input', (e) => {
                    const value = e.target.value;
                    if (value.length === 1) {
                        if (index < otpInputs.length - 1) {
                            otpInputs[index + 1].focus();
                        }
                    } else if (value.length === 0 && index > 0) {
                        otpInputs[index - 1].focus();
                    }
                });

                input.addEventListener('keydown', (e) => {
                    if (e.key === 'Backspace' && !e.target.value && index > 0) {
                        otpInputs[index - 1].focus();
                    }
                });
            });

            $('#otpForm').on('submit', function () {
                let otpValue = '';
                otpInputs.forEach(input => {
                    otpValue += input.value;
                });
                $('#Otp').val(otpValue);
            });
        });

        // Function to get query parameter by name
        function getQueryParam(name) {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get(name);
        }

        // Set value of AdditionalParameter from query parameter
        var queryParamValue = getQueryParam('AppId');
        document.getElementById("employeeId").value = queryParamValue;
    </script>
}