// <auto-generated />
using System;
using DCAS_PracticalExam.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DCAS_PracticalExam.Migrations
{
    [DbContext(typeof(PracticalExamContext))]
    [Migration("20220322074712_Changesbx")]
    partial class Changesbx
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DCAS_PracticalExam.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("DCAS_PracticalExam.Models.CPRAssessmentEvaluationFields", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assessor1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Assessor1Sign")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Assessor2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Assessor2Sign")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CRMRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CandidateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstablishmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PointsStep1")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep10")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep2")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep3")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep4")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep5")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep6")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep7")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep8")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep9")
                        .HasColumnType("bit");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CPRAssessmentEvaluationFields");
                });

            modelBuilder.Entity("DCAS_PracticalExam.Models.EvaluationInstructorsFields", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assessor1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CRMRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstablishmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvaluationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ExaminerSign")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessionalQualifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question10Check")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Question1Check")
                        .HasColumnType("bit");

                    b.Property<bool>("Question1Remediation")
                        .HasColumnType("bit");

                    b.Property<bool>("Question2Check")
                        .HasColumnType("bit");

                    b.Property<bool>("Question2Remediation")
                        .HasColumnType("bit");

                    b.Property<bool>("Question3Check")
                        .HasColumnType("bit");

                    b.Property<bool>("Question3Remediation")
                        .HasColumnType("bit");

                    b.Property<bool>("Question4Check")
                        .HasColumnType("bit");

                    b.Property<bool>("Question4Remediation")
                        .HasColumnType("bit");

                    b.Property<bool>("Question5Check")
                        .HasColumnType("bit");

                    b.Property<bool>("Question5Remediation")
                        .HasColumnType("bit");

                    b.Property<bool>("Question6Check")
                        .HasColumnType("bit");

                    b.Property<bool>("Question6Remediation")
                        .HasColumnType("bit");

                    b.Property<bool>("Question7Check")
                        .HasColumnType("bit");

                    b.Property<bool>("Question7Remediation")
                        .HasColumnType("bit");

                    b.Property<bool>("Question8Check")
                        .HasColumnType("bit");

                    b.Property<bool>("Question8Remediation")
                        .HasColumnType("bit");

                    b.Property<string>("Question9Check")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EvaluationInstructorsFields");
                });

            modelBuilder.Entity("DCAS_PracticalExam.Models.MedicalAssessmentEvaluationFields", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllergicReaction1")
                        .HasColumnType("bit");

                    b.Property<bool>("AllergicReaction2")
                        .HasColumnType("bit");

                    b.Property<bool>("AllergicReaction3")
                        .HasColumnType("bit");

                    b.Property<bool>("AllergicReaction4")
                        .HasColumnType("bit");

                    b.Property<bool>("AllergicReaction5")
                        .HasColumnType("bit");

                    b.Property<bool>("AllergicReaction6")
                        .HasColumnType("bit");

                    b.Property<bool>("AlteredMental1")
                        .HasColumnType("bit");

                    b.Property<bool>("AlteredMental2")
                        .HasColumnType("bit");

                    b.Property<bool>("AlteredMental3")
                        .HasColumnType("bit");

                    b.Property<bool>("AlteredMental4")
                        .HasColumnType("bit");

                    b.Property<bool>("AlteredMental5")
                        .HasColumnType("bit");

                    b.Property<bool>("AlteredMental6")
                        .HasColumnType("bit");

                    b.Property<bool>("AlteredMental7")
                        .HasColumnType("bit");

                    b.Property<bool>("AlteredMental8")
                        .HasColumnType("bit");

                    b.Property<string>("Assessor1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Assessor1Sign")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Assessor2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Assessor2Sign")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("Behavioral1")
                        .HasColumnType("bit");

                    b.Property<bool>("Behavioral2")
                        .HasColumnType("bit");

                    b.Property<bool>("Behavioral3")
                        .HasColumnType("bit");

                    b.Property<bool>("Behavioral4")
                        .HasColumnType("bit");

                    b.Property<bool>("Behavioral5")
                        .HasColumnType("bit");

                    b.Property<string>("CRMRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CandidateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cardiac1")
                        .HasColumnType("bit");

                    b.Property<bool>("Cardiac2")
                        .HasColumnType("bit");

                    b.Property<bool>("Cardiac3")
                        .HasColumnType("bit");

                    b.Property<bool>("Cardiac4")
                        .HasColumnType("bit");

                    b.Property<bool>("Cardiac5")
                        .HasColumnType("bit");

                    b.Property<bool>("Cardiac6")
                        .HasColumnType("bit");

                    b.Property<bool>("Cardiac7")
                        .HasColumnType("bit");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CriteriaCheck1")
                        .HasColumnType("bit");

                    b.Property<bool>("CriteriaCheck2")
                        .HasColumnType("bit");

                    b.Property<bool>("CriteriaCheck3")
                        .HasColumnType("bit");

                    b.Property<bool>("CriteriaCheck4")
                        .HasColumnType("bit");

                    b.Property<bool>("CriteriaCheck5")
                        .HasColumnType("bit");

                    b.Property<bool>("CriteriaCheck6")
                        .HasColumnType("bit");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnvironmentalEmergency1")
                        .HasColumnType("bit");

                    b.Property<bool>("EnvironmentalEmergency2")
                        .HasColumnType("bit");

                    b.Property<bool>("EnvironmentalEmergency3")
                        .HasColumnType("bit");

                    b.Property<bool>("EnvironmentalEmergency4")
                        .HasColumnType("bit");

                    b.Property<bool>("EnvironmentalEmergency5")
                        .HasColumnType("bit");

                    b.Property<string>("EstablishmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Obstetrics1")
                        .HasColumnType("bit");

                    b.Property<bool>("Obstetrics2")
                        .HasColumnType("bit");

                    b.Property<bool>("Obstetrics3")
                        .HasColumnType("bit");

                    b.Property<bool>("Obstetrics4")
                        .HasColumnType("bit");

                    b.Property<bool>("Obstetrics5")
                        .HasColumnType("bit");

                    b.Property<bool>("Obstetrics6")
                        .HasColumnType("bit");

                    b.Property<bool>("Obstetrics7")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep1")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep10")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep11")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep12")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep13")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep14")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep15")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep16")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep17")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep18")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep19")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep2")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep20")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep21")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep22")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep23")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep24")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep25")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep26")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep27")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep3")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep4")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep5")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep6")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep7")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep8")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep9")
                        .HasColumnType("bit");

                    b.Property<bool>("PoisoningOverdose1")
                        .HasColumnType("bit");

                    b.Property<bool>("PoisoningOverdose2")
                        .HasColumnType("bit");

                    b.Property<bool>("PoisoningOverdose3")
                        .HasColumnType("bit");

                    b.Property<bool>("PoisoningOverdose4")
                        .HasColumnType("bit");

                    b.Property<bool>("PoisoningOverdose5")
                        .HasColumnType("bit");

                    b.Property<bool>("PoisoningOverdose6")
                        .HasColumnType("bit");

                    b.Property<bool>("PoisoningOverdose7")
                        .HasColumnType("bit");

                    b.Property<bool>("RespiRespiratory1")
                        .HasColumnType("bit");

                    b.Property<bool>("RespiRespiratory2")
                        .HasColumnType("bit");

                    b.Property<bool>("RespiRespiratory3")
                        .HasColumnType("bit");

                    b.Property<bool>("RespiRespiratory4")
                        .HasColumnType("bit");

                    b.Property<bool>("RespiRespiratory5")
                        .HasColumnType("bit");

                    b.Property<bool>("RespiRespiratory6")
                        .HasColumnType("bit");

                    b.Property<bool>("RespiRespiratory7")
                        .HasColumnType("bit");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MedicalAssessmentEvaluationFields");
                });

            modelBuilder.Entity("DCAS_PracticalExam.Models.TraumaAssessmentEvaluationFields", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assessor1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Assessor1Sign")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Assessor2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Assessor2Sign")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CRMRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CandidateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CriteriaCheck1")
                        .HasColumnType("bit");

                    b.Property<bool>("CriteriaCheck2")
                        .HasColumnType("bit");

                    b.Property<bool>("CriteriaCheck3")
                        .HasColumnType("bit");

                    b.Property<bool>("CriteriaCheck4")
                        .HasColumnType("bit");

                    b.Property<bool>("CriteriaCheck5")
                        .HasColumnType("bit");

                    b.Property<bool>("CriteriaCheck6")
                        .HasColumnType("bit");

                    b.Property<bool>("CriteriaCheck7")
                        .HasColumnType("bit");

                    b.Property<bool>("CriteriaCheck8")
                        .HasColumnType("bit");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstablishmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PointsStep1")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep10")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep11")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep12")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep13")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep14")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep15")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep16")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep17")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep18")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep19")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep2")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep20")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep21")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep22")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep23")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep24")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep25")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep26")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep27")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep28")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep29")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep3")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep30")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep31")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep32")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep33")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep34")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep35")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep36")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep37")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep38")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep39")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep4")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep40")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep5")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep6")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep7")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep8")
                        .HasColumnType("bit");

                    b.Property<bool>("PointsStep9")
                        .HasColumnType("bit");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TraumaAssessmentEvaluationFields");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DCAS_PracticalExam.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DCAS_PracticalExam.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DCAS_PracticalExam.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DCAS_PracticalExam.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
